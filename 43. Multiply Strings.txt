//На сколько я понял тут нужно было сложить строки без прямого преобразования их в int. Поэтому мы преобразовывали символы этих строк отдельно.
//Берём отдельные элементы строк, перемножаем их и суммируем с уже записанным ответом. (Простое умножение в столбик).
//В начале проверяем, если хотябы одна входная строка = 0 то возвращаем 0.
//Создаём строку ответа, равную сумме размеров входящих строк, полностью заполненную нулями. Перебираем все символы во входящих строках.
//Во временную переменную добавляем перемноженные символы и сумируем с уже записанным ответом.
//Далее единичную часть (%10, т.е. остаток) добавляем в i + j + 1 элемент строки ответа , а десятую часть(/10) добавляем в элемент i + j.
//В заключении проходим заново по всему ответу, и если в начале стоят нули, то удаляем их.(Они появляются потому, что размер строки с ответом
//	мы взяли прозапас.)(В данном случае мы просто пересчитываем кол-во 0ей с помощью i, и возвращаем подстроку строки ответа, которая начинается 
//	с iого элемента. Т.е. подстрока содержит только верный ответ.)

class Solution {
public:
    string multiply(string num1, string num2) {
        if (num1 == "0" || num2 == "0") return "0";
        int a = num1.size() - 1, b = num2.size() - 1;
        string answer(a + b + 2, '0');
        for (int i = a; i >= 0; i--) {
            for (int j = b; j >= 0; j--) {
                int temp = (num1[i] - '0') * (num2[j] - '0') + (answer[i + j + 1] - '0');
                answer[i + j + 1] = temp % 10 + '0';
                answer[i + j] += temp / 10;
            }		
        }
        int i = 0;
        while (i < answer.size() && answer[i] == '0') i++;
        return answer.substr(i);
    }
};