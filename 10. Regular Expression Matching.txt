/* Ссылка на видео решение - https://www.youtube.com/watch?v=l3hda49XcDE
Смысл задачи в том чтобы паттерн удоволетворял строке.
Создаём булеву матрицу. Заполняем её. Например: строка - ab, паттерн - .*;
  .* 
 101 
a011
b001
Последнее значание в матрице это и есть правильный ответ.
Логика такова:
Первый символ в матрице это 1. Поскольку пустата соответсвтует пустоте.
Если символ и паттерн совпадает или текущий символ в паттерне это точка, то текущий значение в матрице = позиция в матрице i-1 и j-1;
Если символ в паттерне это *, то текущее значание в матрице = позиция в матрице i и j - 2;
    Далее проверяем, Если текущий символ паттерна - 2 == точке ИЛИ текущий символ паттерна - 2 == текущий символ строки - 1, то 
    текущий символ в матрице  = текущему символу в матрице ИЛИ(побитовое или |) текущий символ в матрице i - 1, j;
Иначе ложь;
*/

class Solution {
public:
    bool isMatch(string s, string p) {
        int columns = size(s) + 1, rows = size(p) + 1;
        vector<vector<bool>> boolVect(columns, vector<bool>(rows));
        boolVect[0][0] = true;
        for (int i = 1; i < columns; i++)
            boolVect[i][0] = false;
        for (int i = 1; i < rows; i++)//Под сомнением
            if (p[i - 1] == '*')
                boolVect[0][i] = boolVect[0][i - 2];

        for (int i = 1; i < columns; i++)
        {
            for (int j = 1; j < rows; j++)
            {
                if (s[i - 1] == p[j - 1] || p[j - 1] == '.')
                    boolVect[i][j] = boolVect[i - 1][j - 1];
                else if (p[j - 1] == '*')
                {
                    boolVect[i][j] = boolVect[i][j - 2];
                    if (p[j - 2] == '.' || p[j - 2] == s[i - 1])
                        boolVect[i][j] = boolVect[i][j] | boolVect[i - 1][j];
                }
                else
                    boolVect[i][j] = false;
            }
        }
        return boolVect[columns - 1][rows - 1];
    }
};